{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/employee-create/employee-create.component.html","webpack:///./src/app/employee-create/employee-create.component.ts","webpack:///./src/app/employee-edit/employee-edit.component.html","webpack:///./src/app/employee-edit/employee-edit.component.ts","webpack:///./src/app/login/login.component.html","webpack:///./src/app/login/login.component.ts","webpack:///./src/app/order-by.pipe.ts","webpack:///./src/app/shared/rest-api.service.ts","webpack:///./src/app/user.service.ts","webpack:///./src/app/users-detail/users-detail.component.html","webpack:///./src/app/users-detail/users-detail.component.ts","webpack:///./src/app/users-list/users-list.component.html","webpack:///./src/app/users-list/users-list.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { EmployeeCreateComponent } from './employee-create/employee-create.component';\nimport { EmployeeEditComponent } from './employee-edit/employee-edit.component';\nimport { UsersDetailComponent } from './users-detail/users-detail.component';\nimport { UsersListComponent } from './users-list/users-list.component';\nimport { LoginComponent } from './login/login.component';\n\nconst routes: Routes = [\n  { path: '', pathMatch: 'full', redirectTo: 'create-employee' },\n  { path: 'create-employee', component: EmployeeCreateComponent },\n  { path: 'employee-edit/:id', component: EmployeeEditComponent },\n  { path: 'users-list', component: UsersListComponent },\n  { path: 'users-detail/:id', component: UsersDetailComponent },\n  { path: 'login', component: LoginComponent }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\n\nexport class AppRoutingModule { }\n","<div class=\"d-flex flex-column flex-md-row align-items-center p-3 px-md-4 mb-3 bg-white border-bottom shadow-sm\">\n  <h5 class=\"my-0 mr-md-auto font-weight-normal\">Employee Management</h5>\n  <nav class=\"my-2 my-md-0 mr-md-3\">\n    <a class=\"btn btn-outline-primary\" routerLinkActive=\"active\" routerLink=\"/create-employee\">Select User</a>\n  </nav>\n  <a class=\"btn btn-outline-primary\" routerLinkActive=\"active\" routerLink=\"/users-list\">Users List</a>\n  <!--<a class=\"btn btn-outline-primary\" routerLinkActive=\"active\" routerLink=\"/login\">Login</a>-->\n</div>\n\n<router-outlet></router-outlet>\n\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'angular-httpclient-app';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { AppComponent } from './app.component';\nimport { RouterModule } from '@angular/router';\n\n// HttpClient module for RESTful API\nimport { HttpClientModule } from '@angular/common/http';\n\n// Routing module for router service\nimport { AppRoutingModule } from './app-routing.module';\n\n// Forms module\nimport { FormsModule } from '@angular/forms';\n\n// Components\nimport { EmployeeCreateComponent } from './employee-create/employee-create.component';\nimport { EmployeeEditComponent } from './employee-edit/employee-edit.component';\nimport { UsersListComponent } from './users-list/users-list.component';\nimport { UsersDetailComponent } from './users-detail/users-detail.component';\nimport { UsersEditComponent } from './users-edit/users-edit.component';\nimport { OrderByPipe } from './order-by.pipe';\nimport { LoginComponent } from './login/login.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    EmployeeCreateComponent,\n    EmployeeEditComponent,\n    UsersListComponent,\n    UsersDetailComponent,\n    UsersEditComponent,\n    OrderByPipe,\n    LoginComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    FormsModule,\n    RouterModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\n\nexport class AppModule { }\n","<div class=\"container custom-container\">\n  <div class=\"col-md-12\">\n\n    <h3>Select a User</h3>\n    <div class=\"form-group\">\n      <label for=\"sel1\">Select list:</label>\n      <select class=\"form-control\" id=\"sel1\" (change)=\"changeWebsite($event)\">\n        <option></option>\n        <option *ngFor=\"let u of (User | orderBy:'last_name' )\">\n          {{u.last_name}}\n        </option>\n      </select>\n    </div>\n\n    <div class=\"box-header with-border\">\n      <div class=\"form-group voffset row\">\n          <label for=\"\" class=\"vertical-label col-sm-4 col-md-8 text-right\"> Select Name</label>\n          <div class=\"col-sm-8 col-md-4\">\n              <select id=\"Id\" class=\"hideLabel form-control\" (change)=\"changeWebsite($event)\">\n                <option></option>\n                <option *ngFor=\"let u of (User | orderBy:'first_name' )\">\n                  {{u.first_name}}\n                </option>\n              </select>\n          </div>\n      </div>\n  </div>\n\n  </div>\n</div>\n\n\n\n\n<!--\n\n    <ul>\n      <li *ngFor=\"let item of array | orderBy:'name'\"> {{ item.name }} </li>\n    </ul>\n\n      <div>\n        <ul>\n          <li  *ngFor=\"let s of User\">{{s.id}}:{{s.first_name}}</li>\n        </ul>\n      </div>\n    <div>\n    <p><label>Choose an employee id</label><input type=\"text\" (keyup)=\"onKey($event)\"></p>\n    <button (click)=\"route()\">Get Details</button>\n    <br/><br/>\n    </div>\n\n\n      <input (keyup)=\"onKey($event)\">\n      <p>{{values}}</p>\n    -->\n\n<!--<h3 class=\"mb-3 text-center\">Create Employee</h3>\n\n    <div class=\"form-group\">\n      <input type=\"text\" [(ngModel)]=\"employeeDetails.name\" class=\"form-control\" placeholder=\"Name\">\n    </div>\n\n    <div class=\"form-group\">\n      <input type=\"text\" [(ngModel)]=\"employeeDetails.email\" class=\"form-control\" placeholder=\"Email\">\n    </div>\n\n    <div class=\"form-group\">\n      <input type=\"text\" [(ngModel)]=\"employeeDetails.phone\" class=\"form-control\" placeholder=\"Phone\">\n    </div>\n\n    <div class=\"form-group\">\n      <button class=\"btn btn-success btn-lg btn-block\" (click)=\"addEmployee()\">Create Employee</button>\n    </div>-->\n","import { Component, OnInit, Input } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { RestApiService } from \"../shared/rest-api.service\";\nimport { UserService } from '../user.service';\nimport { ActivatedRoute } from '@angular/router';\nimport { User } from '../user';\n\n@Component({\n  selector: 'app-employee-create',\n  templateUrl: './employee-create.component.html',\n  styleUrls: ['./employee-create.component.css']\n})\n\nexport class EmployeeCreateComponent implements OnInit {\n\n  User: any = [];\n\n  constructor(\n    public restApi: RestApiService,\n    public userService: UserService,\n    public router: Router\n  ) {}\n\n  ngOnInit() {\n    this.loadUsers()\n  }\n\n\n  loadUsers() {\n    console.log(\"loadUsers\")\n    return this.userService.getUsers().subscribe((data: {}) => {\n      this.User = data['data'];\n      console.log(\"Data without specific \"+JSON.stringify(data));\n      console.log(\"Data \"+JSON.stringify(data['data']));\n      console.log(this.User);\n    })\n  }\n\n  changeWebsite(e) {\n    console.log(e.target.value);\n\n    for (let o of this.User) {\n      console.log(o.id, o.first_name, o.last_name, o.avatar, o.email);\n      if (o.last_name == e.target.value) {\n        console.log(\"Yes both are true \", o.last_name, ' ', e.target.value);\n        this.router.navigate(['/users-detail/' + o.id]);\n        return;\n      }\n    }\n\n  }\n\n  /*addEmployee(dataEmployee) {\n    this.restApi.createEmployee(this.employeeDetails).subscribe((data: {}) => {\n      this.router.navigate(['/employees-list'])\n    })\n  }*/\n}\n\n\n\n\n\n\n\n\n//sortinng\n\n/*this.userService1.getUsers().subscribe((data: {}) => {\n  this.User1 = data;\n  console.log(\"Call from constructor\");\n  console.log(this.User1);\n\nconsole.log(\"My Array 2\");\nfor (let o2 of this.User1) {\n  //console.log(o2.id, o2.first_name, o2.last_name, o2.avatar, o2.email);\n  //console.log(this.myarray2.push(o2.first_name));\n  this.myarray2.push(o2.first_name);\n}\nconsole.log(this.myarray2);\nconsole.log(\"Length of array \", this.myarray2.length);\n})\n//this.getSort()\n*/\n\n\n  /*getSort(){\n    console.log(\"My Array 1\");\n    console.log(this.User1);\n    for (let o2 of this.User1) {\n      console.log(o2.id, o2.first_name, o2.last_name, o2.avatar, o2.email);\n      this.myarray1.push(o2.first_name);\n      console.log(this.myarray1.length);\n      console.log(this.myarray1);\n      console.log(\"Length of array \", this.myarray1.length);\n    }\n    console.log(this.myarray1.length);\n    console.log(this.myarray1);\n    console.log(\"Length of array \", this.myarray1.length);\n}\n\nmyarray = [\n  {name: 'Haresh'},\n  {name: 'Paresh'},\n  {name: 'Amit'}\n];\n*/\n\n//\n  //@Input() employeeDetails = { name: '', email: '', phone: 0 }\n\n/*  pair = [\n    {1:\"George\",},\n    {2:\"Janet\"},\n    {3:\"Emma\"},\n    {4:\"Eve\"},\n    {5:\"Charles\"},\n    {6:\"Tracey\"}\n    ];\n\n  value: any;\n  objectKeys = Object.keys;\n  items = {};\n  obj:any = [];\n  //i: number;\n  //items = { keyOne: 'value 1', keyTwo: 'value 2', keyThree: 'value 3' };\n\n  arr = [];\n  arr2 = [];\n  arr3 = [];\n  i:number;\n  j:number = 0;\n  userid: any;\n  k:number;\n  values = '';\n*/\n\n//}\n\n    //this.loadUsers()\n    //this.getListKeyPair()\n        // Get users list\n        /*loadUsers() {\n          this.i=1;\n          return this.userService.getUsers().subscribe((data: {}) => {\n            this.User = data;\n            this.arr = [this.User[this.i]];\n            console.log(\"Array\", this.arr);\n            console.log(\"User\", this.User);\n            console.log(\"Data\", data);\n            this.i++;\n          })\n        }*/\n              //for(this.j=0; this.j<6; this.j++){\n                //this.arr2 = [this.User[this.j]];\n                  //console.log(this.j);\n                  //console.log(\"Array\", this.arr2);\n              //}\n              //console.log(\"User\", this.User);\n              //console.log(\"Data\", data);\n              //this.i++;\n            //for(let e of this.arr2){\n              //console.log(e.id);\n            //}\n\n\n        /*getListKeyPair(){\n        console.log(\"getListKeyPair\");\n\n          for (this.obj of this.User) {\n            console.log(\"object:\", this.obj.id);\n            console.log(\"object:\", this.obj.first_name);\n          }\n          for(var i = 1; i <= 5; i++){\n            console.log(\"I\",i);\n         }\n\n         for (var i=1; i<=6; i++){\n           console.log(this.User[i]);\n         }\n\n          this.items = { keyOne: 'value 1', keyTwo: 'value 2', keyThree: 'value 3' };\n          console.log(this.items);\n\n          //items = { keyOne: 'value 1', keyTwo: 'value 2', keyThree: 'value 3' };\n        //this.userService.getUsers().subscribe((data: {}) => {\n          //this.User = data;\n          //this.objectKeys = this.User.id;\n          //this.items = { this.objectKeys:  'this.User.first_name'};\n        //})\n          //return this.items;\n        }*/\n        //route(event: any){\n          //console.log(\"Routed from button click\");\n          //console.log(\"User id\", event.target.value);\n          //this.router.navigate(['/users-detail/'+event.target.value+'']);\n\n        //}\n\n        //onKey(event: any) { // without type info\n          //this.values += event.target.value + ' | ';\n          //for(this.i=0;this.i<6;this.i++){\n          //}\n          //console.log(\"onkey arr2 arr3\");\n          //this.arr2.forEach( (currentValue, index) => {\n            //if(!currentValue.name){\n                //this.arr2.splice(index, 1);\n            //}\n            //console.log(currentValue);\n          //});\n          //this.arr3.forEach( (currentValue, index) => {\n            //if(!currentValue.name){\n                //this.arr3.splice(index, 1);\n            //}\n            //console.log(currentValue);\n          ////});\n          //console.log(\"arr2 values\",this.arr2.values);\n          //console.log(\"arr3 values\",this.arr3.values);\n         //his.router.navigate(['/users-detail/'+event.target.value+'']);\n        //}\n            /*\n            for (let obj of this.pair) {\n              console.log(\"object:\", obj);\n          }\n            for (let key in this.obj) {\n              console.log(\"      key:\", key, \"value:\", this.obj[key]);\n              //console.log(obj[key].first_name + ' ' + obj[key].id);\n              //if(key==\"first_name\"){\n                if(e.target.value == this.obj[key]){\n                  console.log(\"key\",key);\n                  var y: number = +key;\n                  console.log(\"y\",y);\n                  this.routeNo = y;\n                  console.log(\"Route No \" , this.routeNo);\n                }\n              //}\n          }\n          console.log(\"Route no \", this.routeNo);\n          this.router.navigate(['/users-detail/'+this.routeNo+'']);*/\n            //console.log((e.target as HTMLInputElement).value);\n            //console.log(e.id);\n\n/*            onKey(e) {\n              for (let obj of this.pair) {\n                console.log(\"object:\", obj);\n            }\n              for (let key in this.obj) {\n                console.log(\"      key:\", key, \"value:\", this.obj[key]);\n                //console.log(obj[key].first_name + ' ' + obj[key].id);\n                //if(key==\"first_name\"){\n                  if(e.target.value == this.obj[key]){\n                    var y: number = +key;\n                    this.routeNo = y;\n                  }\n                //}\n            }\n\n\n              console.log(\"Target value \", e.target.value);\n              this.routeNo = e.target.value;\n              console.log(\"Route No \" , this.routeNo);\n              this.router.navigate(['/users-detail/'+this.routeNo+'']);\n            }\n  */\n\n                          //this.use.id = this.User;\n              //this.use.first_name = this.User;\n              //this.todos.id = this.use.id;\n              //this.todos.first_name = this.use.first_name;\n              //console.log(\"todos\");\n              //console.log(this.todos.id);\n              //console.log(this.todos.first_name);\n              //this.arr2.push(this.use.id);\n              //this.arr3.push(this.use.first_name);\n              //console.log(\"id\",this.use.id);\n              //console.log(\"first name\",this.use.first_name);\n              //console.log(\"Get Loop Object Keys \" + this.User);\n            //if(!currentValue.name){\n                //this.arr2.splice(index, 1);\n          //});\n          //this.getJson()\n          //this.todos.forEach( (currentValue, index) => {\n            //console.log(currentValue.id + ' ' + currentValue.first_name);\n          //});\n         //getJson(){\n           //data5 = JSON.parse(this.pair);\n           //console.log(this.pair);\n           //console.log(JSON.stringify(this.pair));\n           //console.log(this.pair.id);\n           //for(this.k=0;this.k<=6;this.k++){\n             //console.log(this.pair.id[this.k] + ' ' + this.pair.first_name);\n             //console.log(this.pair(this.k));\n           //}\n           //console.log(\"Data results\");\n           //console.log(data5);\n           //console.log(data5.id);\n           //console.log(data5.first_name);\n\n          //}\n/*          public use: User;\n          //public todos: User = [];\n          todos: any = {\n              id: '',\n              firstname: ''\n            }\n            routeNo:number = 0;\n        this.use = new User();\n             */\n","<div class=\"container custom-container\">\n  <div class=\"col-md-12\">\n    \n    <h3 class=\"mb-3 text-center\">Update Employee</h3>\n\n    <div class=\"form-group\">\n      <input type=\"text\" [(ngModel)]=\"employeeData.name\" class=\"form-control\" placeholder=\"Name\">\n    </div>\n\n    <div class=\"form-group\">\n      <input type=\"text\" [(ngModel)]=\"employeeData.email\" class=\"form-control\" placeholder=\"Email\">\n    </div>\n\n    <div class=\"form-group\">\n      <input type=\"text\" [(ngModel)]=\"employeeData.phone\" class=\"form-control\" placeholder=\"Phone\">\n    </div>\n\n    <div class=\"form-group\">\n      <button class=\"btn btn-success btn-lg btn-block\" (click)=\"updateEmployee()\">Update Employee</button>\n    </div>\n    \n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { RestApiService } from \"../shared/rest-api.service\";\nimport { ActivatedRoute, Router } from '@angular/router';\n\n@Component({\n  selector: 'app-employee-details',\n  templateUrl: './employee-edit.component.html',\n  styleUrls: ['./employee-edit.component.css']\n})\n\nexport class EmployeeEditComponent implements OnInit {\n  id = this.actRoute.snapshot.params['id'];\n  employeeData: any = {};\n\n  constructor(\n    public restApi: RestApiService,\n    public actRoute: ActivatedRoute,\n    public router: Router\n  ) { \n  }\n\n  ngOnInit() { \n    this.restApi.getEmployee(this.id).subscribe((data: {}) => {\n      this.employeeData = data;\n    })\n  }\n\n  // Update employee data\n  updateEmployee() {\n    if(window.confirm('Are you sure, you want to update?')){\n      this.restApi.updateEmployee(this.id, this.employeeData).subscribe(data => {\n        this.router.navigate(['/employees-list'])\n      })\n    }\n  }\n\n}","<p>\n  login works!\n</p>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n  constructor() {console.log(\"Executed from login page constructor\"); }\n\n  ngOnInit() {\n  }\n\n  onSubmit(){\n    console.log(\"Submitted\");\n    //console.log(\"user\" +);\n    //console.log(\"pass\" + );\n  }\n  onCancel(){\n    console.log(\"cancelled\");\n    //id= \"\";\n  }\n\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'orderBy'\n})\nexport class OrderByPipe implements PipeTransform {\n  transform(array: any, field: string): any[] {\n    array.sort((a: any, b: any) => {\n      if (a[field] < b[field]) {\n        return -1;\n      } else if (a[field] > b[field]) {\n        return 1;\n      } else {\n        return 0;\n      }\n    });\n    console.log(\"Array\",array);\n    return array;\n  }\n}","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Employee } from '../shared/employee';\nimport { Observable, throwError } from 'rxjs';\nimport { retry, catchError } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class RestApiService {\n  \n  // Define API\n  apiURL = 'http://localhost:3000';\n\n  constructor(private http: HttpClient) { }\n\n  /*========================================\n    CRUD Methods for consuming RESTful API\n  =========================================*/\n\n  // Http Options\n  httpOptions = {\n    headers: new HttpHeaders({\n      'Content-Type': 'application/json'\n    })\n  }  \n\n  // HttpClient API get() method => Fetch employees list\n  getEmployees(): Observable<Employee> {\n    return this.http.get<Employee>(this.apiURL + '/employees')\n    .pipe(\n      retry(1),\n      catchError(this.handleError)\n    )\n  }\n\n  // HttpClient API get() method => Fetch employee\n  getEmployee(id): Observable<Employee> {\n    return this.http.get<Employee>(this.apiURL + '/employees/' + id)\n    .pipe(\n      retry(1),\n      catchError(this.handleError)\n    )\n  }  \n\n  // HttpClient API post() method => Create employee\n  createEmployee(employee): Observable<Employee> {\n    return this.http.post<Employee>(this.apiURL + '/employees', JSON.stringify(employee), this.httpOptions)\n    .pipe(\n      retry(1),\n      catchError(this.handleError)\n    )\n  }  \n\n  // HttpClient API put() method => Update employee\n  updateEmployee(id, employee): Observable<Employee> {\n    return this.http.put<Employee>(this.apiURL + '/employees/' + id, JSON.stringify(employee), this.httpOptions)\n    .pipe(\n      retry(1),\n      catchError(this.handleError)\n    )\n  }\n\n  // HttpClient API delete() method => Delete employee\n  deleteEmployee(id){\n    return this.http.delete<Employee>(this.apiURL + '/employees/' + id, this.httpOptions)\n    .pipe(\n      retry(1),\n      catchError(this.handleError)\n    )\n  }\n\n  // Error handling \n  handleError(error) {\n     let errorMessage = '';\n     if(error.error instanceof ErrorEvent) {\n       // Get client-side error\n       errorMessage = error.error.message;\n     } else {\n       // Get server-side error\n       errorMessage = `Error Code: ${error.status}\\nMessage: ${error.message}`;\n     }\n     window.alert(errorMessage);\n     return throwError(errorMessage);\n  }\n\n}","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable, throwError } from 'rxjs';\nimport { retry, catchError } from 'rxjs/operators';\nimport {User} from './user';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserService {\n  // Define API\n  //apiURL = 'http://localhost:3000';\n  apiURL = 'https://reqres.in/api';\n\n  constructor(private http: HttpClient) { }\n\n  /*========================================\n    CRUD Methods for consuming RESTful API\n  =========================================*/\n\n  // Http Options\n  httpOptions = {\n    headers: new HttpHeaders({\n      'Content-Type': 'application/json'\n    })\n  }\n\n  // HttpClient API get() method => Fetch employees list\n  getUsers(): Observable<User> {\n    console.log(this.http.get<User>(this.apiURL + '/users'));\n    return this.http.get<User>(this.apiURL + '/users')\n    .pipe(\n      retry(1),\n      catchError(this.handleError)\n    )\n  }\n\n  // HttpClient API get() method => Fetch employee\n  getUser(id): Observable<User> {\n    return this.http.get<User>(this.apiURL + '/users/' + id)\n    .pipe(\n      retry(1),\n      catchError(this.handleError)\n    )\n  }\n\n  // HttpClient API post() method => Create employee\n  createUser(user): Observable<User> {\n    return this.http.post<User>(this.apiURL + '/users', JSON.stringify(user), this.httpOptions)\n    .pipe(\n      retry(1),\n      catchError(this.handleError)\n    )\n  }\n\n  // HttpClient API put() method => Update employee\n  updateUser(id, user): Observable<User> {\n    return this.http.put<User>(this.apiURL + '/users/' + id, JSON.stringify(user), this.httpOptions)\n    .pipe(\n      retry(1),\n      catchError(this.handleError)\n    )\n  }\n\n  // HttpClient API delete() method => Delete employee\n  deleteUser(id){\n    return this.http.delete<User>(this.apiURL + '/users/' + id, this.httpOptions)\n    .pipe(\n      retry(1),\n      catchError(this.handleError)\n    )\n  }\n\n  // Error handling\n  handleError(error) {\n     let errorMessage = '';\n     if(error.error instanceof ErrorEvent) {\n       // Get client-side error\n       errorMessage = error.error.message;\n     } else {\n       // Get server-side error\n       errorMessage = `Error Code: ${error.status}\\nMessage: ${error.message}`;\n     }\n     window.alert(errorMessage);\n     return throwError(errorMessage);\n  }\n}\n","<p>user-details works!</p>\n\n  <div class=\"container custom-container-2\">\n\n    <h3 class=\"mb-3 text-center\">User Details</h3>\n  \n      <div class=\"col-md-12\">\n        <table class=\"table table-bordered\">\n          <thead>\n            <tr>\n              <th scope=\"col\">User Details</th><th scope=\"col\">User Entry in List => {{userData.id}}</th>\n            </tr>\n          </thead>\n          <tbody>\n            <tr><td><b>ID</b></td><td>{{userData.id}}</td></tr>\n            <tr><td><b>First Name</b></td><td>{{userData.first_name}}</td></tr>\n            <tr><td><b>Last Name</b></td><td>{{userData.last_name}}</td></tr>\n            <tr><td><b>Email</b></td><td>{{userData.email}}</td></tr>\n            <tr><td><b>Avatar</b></td><td><img [src]=\"userData.avatar\"></td></tr>\n            <tr scope=\"col\" colspan=\"2\"><span class=\"edit\" routerLink=\"/users-list\">Go Back to Users List</span></tr>\n            <tr scope=\"col\" colspan=\"2\"><span class=\"edit\" routerLink=\"/create-employee\">Go Back to Select User Section</span></tr>\n          </tbody>\n        </table>\n      </div>\n","import { Component, OnInit } from '@angular/core';\nimport { UserService } from \"../user.service\";\nimport { ActivatedRoute, Router } from '@angular/router';\n\n@Component({\n  selector: 'app-users-detail',\n  templateUrl: './users-detail.component.html',\n  styleUrls: ['./users-detail.component.css']\n})\nexport class UsersDetailComponent implements OnInit {\n\n  id = this.actRoute.snapshot.params['id'];\n  userData: any = {};\n  \n  constructor(\n    public userService: UserService,\n    public actRoute: ActivatedRoute,\n    public router: Router\n  ) {}\n  \n  ngOnInit() { \n    this.userService.getUser(this.id).subscribe((data: {}) => {\n      this.userData = data['data'];\n      console.log(this.id,\"User Details\",this.userData)\n    })\n  }\n  \n/*\n  // Update employee data\n  updateEmployee() {\n    if(window.confirm('Are you sure, you want to update?')){\n      this.userService.updateUser(this.id, this.userData).subscribe(data => {\n        this.router.navigate(['/users-list'])\n      })\n    }\n  }*/\n}\n","<div class=\"container custom-container-2\">\n\n    <h3 class=\"mb-3 text-center\">Users List</h3>\n\n    <div class=\"col-md-12\">\n      <table class=\"table table-bordered\">\n        <thead>\n          <tr>\n            <th scope=\"col\">User Id</th>\n            <th scope=\"col\">First Name</th>\n            <th scope=\"col\">Last Name</th>\n            <th scope=\"col\">Email</th>\n            <th scope=\"col\">Avatar</th>\n            <th scope=\"col\">Action</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr *ngFor=\"let user of User\">\n            <td>{{user.id}}</td>\n            <td>{{user.first_name}}</td>\n            <td>{{user.last_name}}</td>\n            <td>{{user.email}}</td>\n            <td><img [src]=\"user.avatar\"></td>\n            <td>\n              <span class=\"detail\" routerLink=\"/users-detail/{{user.id}}\">Details</span>\n            </td>\n          </tr>\n        </tbody>\n      </table>\n    </div>\n\n\n\n    <!--\n      <button><span class=\"detail\" routerLink=\"/users-detail/{{u.id}}\"></span>Get Detail</button>\n\n  <ul>\n    <li *ngFor=\"let u of User\">{{u.first_name}}</li>\n  </ul>\n<div class=\"dropdown\">\n  <button class=\"btn btn-secondary dropdown-toggle\" type=\"button\" id=\"dropdownMenuButton1\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">\n    Dropdown button\n  </button>\n  <ul class=\"dropdown-menu\" aria-labelledby=\"dropdownMenuButton1\">\n    <li><a class=\"dropdown-item\" href=\"#\">Action</a></li>\n    <li><a class=\"dropdown-item\" href=\"#\">Another action</a></li>\n    <li><a class=\"dropdown-item\" href=\"#\">Something else here</a></li>\n  </ul>\n</div>\n\n<div class=\"dropdown\">\n  <a class=\"btn btn-secondary dropdown-toggle\" href=\"#\" role=\"button\" id=\"dropdownMenuLink\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">\n    Dropdown link\n  </a>\n\n  <ul class=\"dropdown-menu\" aria-labelledby=\"dropdownMenuLink\">\n    <li><a class=\"dropdown-item\" href=\"\">Action</a></li>\n    <li><a class=\"dropdown-item\" href=\"\">Another action</a></li>\n    <li><a class=\"dropdown-item\" href=\"\">Something else here</a></li>\n  </ul>\n</div>\n\n-->\n\n\n</div>\n\n\n\n\n\n  <!--</div>\n-->\n              <!--\n                <span class=\"edit\" routerLink=\"/employee-edit/{{employee.id}}\">Edit</span>\n              <span class=\"delete\" (click)=\"deleteEmployee(employee.id)\">Delete</span>-->\n  <!-- Show it when there is no employee \n  <div class=\"no-data text-center\" *ngIf=\"User.length == 0\">\n    <p>There is no users added yet!</p>\n    <button class=\"btn btn-outline-primary\" routerLink=\"/create-employee\">Add User</button>\n  </div>-->\n\n  <!-- Employees list table, it hides when there is no employee \n  <div *ngIf=\"Employee.length !== 0\">-->\n","import { Component, OnInit } from '@angular/core';\nimport { UserService } from '../user.service';\nimport { ActivatedRoute, Router } from '@angular/router';\n\n\n@Component({\n  selector: 'app-users-list',\n  templateUrl: './users-list.component.html',\n  styleUrls: ['./users-list.component.css']\n})\nexport class UsersListComponent implements OnInit {\n\n  User: any = [];\n  User1: any = [];\n  //@Input User1;\n  \n\n  constructor(\n    public userService: UserService,\n    public actRoute: ActivatedRoute,\n    public router: Router) { }\n\n  ngOnInit() {\n    console.log(\"user-list\")\n    this.loadUsers()\n    //this.getListKeyPair()\n  }\n\n    // Get users list\n    loadUsers() {\n      return this.userService.getUsers().subscribe((data: {}) => {\n        this.User = data['data'];\n        this.User1 = this.User;\n        console.log(\"User\", this.User);\n        console.log(\"Data\", data);\n      })\n    }\n\n    /*getListKeyPair(){\n    console.log(\"getListKeyPair\");\n\n      for (this.obj of this.User) {\n        console.log(\"object:\", this.obj.id);\n        console.log(\"object:\", this.obj.first_name);\n      }\n      for(var i = 1; i <= 5; i++){\n        console.log(\"I\",i);\n     }\n\n      this.items = { keyOne: 'value 1', keyTwo: 'value 2', keyThree: 'value 3' };\n      console.log(this.items);\n\n      //items = { keyOne: 'value 1', keyTwo: 'value 2', keyThree: 'value 3' };\n    //this.userService.getUsers().subscribe((data: {}) => {\n      //this.User = data;\n      //this.objectKeys = this.User.id;\n      //this.items = { this.objectKeys:  'this.User.first_name'};\n    //})\n      //return this.items;\n    }\n\n    changeWebsite(e) {\n      console.log(e.target.value);\n      console.log((e.target as HTMLInputElement).value);\n      console.log(e.id);\n      this.router.navigate(['/users-detail/'+e.target.value+'']);\n      \n    }*/\n\n  /*\n  // Delete employee\n  deleteEmployee(id) {\n    if (window.confirm('Are you sure, you want to delete?')){\n      this.restApi.deleteEmployee(id).subscribe(data => {\n        this.loadEmployees()\n      })\n    }\n  } */ \n\n}","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}